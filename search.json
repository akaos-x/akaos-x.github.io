[{"categories":null,"content":"介绍 UNIFYZ-DN42 (AS4242421100) 网络是由 unify-z(听风) 全权运营的 DN42 网络。 该网络仅支持 WireGuard。 Looking Glass: https://lg.unifyz.top/ 警告 本网络大部分节点（中国大陆节点除外）不与中国大陆的服务器 Peer，以避免可能的法律问题。 ","date":"2025-01-31","objectID":"/dn42/:1:0","tags":null,"title":"UNi-Network DN42","uri":"/dn42/"},{"categories":null,"content":"前缀 IPv4: 172.20.175.0/27 IPv6: fdc7:c925:95f5::/48 ","date":"2025-01-31","objectID":"/dn42/:2:0","tags":null,"title":"UNi-Network DN42","uri":"/dn42/"},{"categories":null,"content":"Peering 目前 UNIFYZ-DN42 开放 Peering，您可以通过建立 WireGuard 隧道与我 Peering。 请将以下信息通过电子邮件发送至 yr72450@gmail.com 或在本页面留下评论，我会在七天左右配置好并回复。 ASN: 424242xxxx Public IP: x.x.x.x DN42 IPv4: DN42 IPv6: (包括用于 IPv6 对等的链路本地地址) Server: 您要 peer 的节点名称 WireGuard Public Key: WireGuard Listen Port: 21166 Transmit Routes: (IPv6/IPv4/both) ","date":"2025-01-31","objectID":"/dn42/:3:0","tags":null,"title":"UNi-Network DN42","uri":"/dn42/"},{"categories":null,"content":"节点列表 Server Id Endpoint Public IP Local Link Ipv6 DN42 IPv4 DN42 IPv6 cn-hongkong-s1 s1 s1.dn42.unifyz.top:\u003c您 ASN 的最后五位数字\u003e s1.dn42.unifyz.top/154.64.244.147 fe80::1100:1/64 172.20.175.1 fdc7:c925:95f5:1 cn-guangdong-s2 s2 s2.dn42.unifyz.top:\u003c您 ASN 的最后五位数字\u003e s2.dn42.unifyz.top/120.238.43.250 fe80::1100:2/64 172.20.175.2 fdc7:c925:95f5:2 ","date":"2025-01-31","objectID":"/dn42/:4:0","tags":null,"title":"UNi-Network DN42","uri":"/dn42/"},{"categories":["网络"],"content":"前言 DN42 全称 Decentralized Network 42（42 号去中心网络），是一个大型、去中心化的 VPN 网络。但是与其它传统 VPN 不同的是，DN42 本身不提供 VPN 出口服务（也就是说你不能用他来绕墙）但它使用了大量在目前互联网骨干上应用的技术（例如 BGP 和递归 DNS），可以很好地模拟一个真实的网络环境。 ","date":"2025-01-21","objectID":"/posts/05fcb59/:1:0","tags":["DN42"],"title":"DN42 实验网络 —— 内网搭建","uri":"/posts/05fcb59/"},{"categories":["网络"],"content":"开始搭建 ","date":"2025-01-21","objectID":"/posts/05fcb59/:2:0","tags":["DN42"],"title":"DN42 实验网络 —— 内网搭建","uri":"/posts/05fcb59/"},{"categories":["网络"],"content":"系统设置 ​ 首先，需要打开 Linux 内核的数据包转发功能（ip_forwarding） echo \"net.ipv4.ip_forward=1\" \u003e\u003e /etc/sysctl.conf echo \"net.ipv6.conf.default.forwarding=1\" \u003e\u003e /etc/sysctl.conf echo \"net.ipv6.conf.all.forwarding=1\" \u003e\u003e /etc/sysctl.conf sysctl -p ​ 其次，关闭 Linux 内核 rp_filter 的严格模式 echo \"net.ipv4.conf.default.rp_filter=0\" \u003e\u003e /etc/sysctl.conf echo \"net.ipv4.conf.all.rp_filter=0\" \u003e\u003e /etc/sysctl.conf sysctl -p 警告 以下内容引用自 DN42 实验网络介绍及注册教程（2022-12 更新） - Lan Tian @ Blog rp_filter是 Linux 内核针对网络的一项网络安全保护功能，对于数据包的来源地址和来源网络界面（网卡）进行检查： 如果设置为 0（即禁用），放行所有数据包。 但是有些无法正常回复（路由表内没有对应项目）的数据包也会被发给应用程序处理，消耗额外的系统资源。 不过额外消耗应该很小，因此上述两项设置为 0 也没问题。 如果设置为 1（严格模式），如果数据包来源网卡不是发送这个数据包的最优网卡（也就是如果你本机要回复这个地址的话，会选择一张不同的网卡），就把这个数据包丢掉。 来源和回复在不同网卡是 DN42 内非常常见的情况，因此 千万 一定 绝对 不能把 rp_filter 设置成 1！ 如果设置为 2（宽松模式），从理论上来说，如果数据包来源地址不在路由表内（也就是本机不知道要怎么回复这个地址），就把这个数据包丢掉。 但是理论归理论，在新版本（5.0+）的内核中，实际使用中依然会有大量来源地址正确的正常数据包被丢弃。因此不要使用这个模式，请统一使用0。 ​ 最后，关闭 UFW 等防火墙工具。如果你需要配置Firewall的话，我建议你手动配置 iptables。 ","date":"2025-01-21","objectID":"/posts/05fcb59/:2:1","tags":["DN42"],"title":"DN42 实验网络 —— 内网搭建","uri":"/posts/05fcb59/"},{"categories":["网络"],"content":"内网搭建 ​ 自建 Zerotier-planet 服务器，按官方文档来就行，本文不再叙述。 ​ 安装完成后，点击导航栏 “Add Network”，名称随意，进入到网络配置页面，如下图所示，进入Easy Setup配置你在 DN42 分到的 ip信息。 ​ 然后打开 Routes，将 ip 的网关设置好 ","date":"2025-01-21","objectID":"/posts/05fcb59/:2:2","tags":["DN42"],"title":"DN42 实验网络 —— 内网搭建","uri":"/posts/05fcb59/"},{"categories":["网络"],"content":"ZeroTier-One 配置 ​ 安装 ​ curl -s https://install.zerotier.com | sudo bash ​ 如果装了 GPG 可以用 ​ curl -s 'https://raw.githubusercontent.com/zerotier/ZeroTierOne/main/doc/contact%40zerotier.com.gpg' | gpg --import \u0026\u0026 \\ if z=$(curl -s 'https://install.zerotier.com/' | gpg); then echo \"$z\" | sudo bash; fi ​ 安装完成后，进入 planet安装目录/data/zerotier/dist 把里面的 planet 文件替换到 /var/lib/zerotier-one 后重启服务 zerotier-cli join 加入网络管理员后台同意后，这时候连上你的服务器，ping 一下 web 上分配给其他服务器的 ip，应该可以 ping 通了。 ","date":"2025-01-21","objectID":"/posts/05fcb59/:2:3","tags":["DN42"],"title":"DN42 实验网络 —— 内网搭建","uri":"/posts/05fcb59/"},{"categories":["网络"],"content":"IBGP 相关配置 ​ 现在你的服务器只是互联了，但是你并没有宣告外部这个服务器能互联到你 AS 内的其他服务器，所以你需要创建 IBGP 来宣告一下。以下是 bird 配置示例，如果您需要更高级 / 更方便的方式，可前往 DN42 实验网络介绍及注册教程（2022-12 更新） - Lan Tian @ Blog template bgp milu_internal { local as OWNAS; path metric 1; direct; enable extended messages on; ipv4 { next hop self yes; import all; export all; }; ipv6 { next hop self yes; import all; export all; }; }; protocol bgp mlnet_other_server from milu_internal { NEIGHBOR_IP 其他互联服务器的ip neighbor NEIGHBOR_IP as OWNAS; }; protocol bgp mlnet_other_server from milu_internal { NEIGHBOR_IP 其他互联服务器的ip neighbor NEIGHBOR_IP as OWNAS; }; // 以此类推 将此配置文件添加到每个服务器上，重载 bird 配置后，等待几分钟应该就可以在外部 ping 到你内部了 ","date":"2025-01-21","objectID":"/posts/05fcb59/:3:0","tags":["DN42"],"title":"DN42 实验网络 —— 内网搭建","uri":"/posts/05fcb59/"},{"categories":["网络"],"content":"参考文章 萌新入坑 DN42 之 —— 多服务器互联 DN42 实验网络介绍及注册教程（2022-12 更新） - Lan Tian @ Blog ","date":"2025-01-21","objectID":"/posts/05fcb59/:4:0","tags":["DN42"],"title":"DN42 实验网络 —— 内网搭建","uri":"/posts/05fcb59/"},{"categories":["储存"],"content":"为什么要选择PicGo+缤纷云 ​ 最近陆陆续续的把博客搭建完了，后来发现在插入图片时不可避免的会碰到关于图床选择的问题，在参考了网上十几篇关于图床的文章后，我总结出了以下内容，同时网上也没有关于缤纷云建图床的方案，本篇文章既作为笔记，也作为文章发布，供大家参考~ ","date":"2023-07-30","objectID":"/posts/220ffe6/:1:0","tags":["图床","PicGo"],"title":"缤纷云+PicGo搭建图床","uri":"/posts/220ffe6/"},{"categories":["储存"],"content":"缤纷云免费额度 ​ 如下，50GiB和10GB的流量已经够我们用了（如果用cdn的话还能有20gb），详细见下 免费额度 前置条件 - 实名账户: 前 50 GiB 存储 每月前 10*3 GB HTTP/HTTPS 流量（每日每项限 5 GB） S4 出口流量 10GB/月 内置 CDN 回源 S4 流量 10GB/月 内置 CDN 出口流量 10GB/月 每月前 10*3 万次 请求（每日每项限 1 万次） S4 请求数 10万次/月 内置 CDN 回源 S4 请求数 10万次/月 内置 CDN 请求数 10万次/月 ","date":"2023-07-30","objectID":"/posts/220ffe6/:2:0","tags":["图床","PicGo"],"title":"缤纷云+PicGo搭建图床","uri":"/posts/220ffe6/"},{"categories":["储存"],"content":"相关工具 PicGo:https://github.com/Molunerfinn/PicGo Node.js:https://nodejs.org 缤纷云:https://www.dogecast.com/ ","date":"2023-07-30","objectID":"/posts/220ffe6/:3:0","tags":["图床","PicGo"],"title":"缤纷云+PicGo搭建图床","uri":"/posts/220ffe6/"},{"categories":["储存"],"content":"正文 ","date":"2023-07-30","objectID":"/posts/220ffe6/:4:0","tags":["图床","PicGo"],"title":"缤纷云+PicGo搭建图床","uri":"/posts/220ffe6/"},{"categories":["储存"],"content":"具体步骤 第一步：准备步骤 ​ 1.首先将PicGo、Nodejs等工具安装好，并注册缤纷云账号，国内平台注册不在叙述（如果出现超时等网络错误，请自行解决） ​ 2.之后在picgo中搜索插件\"s3\"，下载第一个即可。后面那个也会介绍具体配置内容，可能略有不同。 第二步：创建储存桶 ​ 进入控制台后，点击“创建”，然后如图设置，注意这边权限一定要选公开桶，否则他人访问不了你的图片！ ​ 创建完后，回到控制台，进入\"AccessKey\"页面，然后点击右上角\"创建子用户\"，名称随意。不出意外的话你将会看到Access Key和Secret Key。先找个东西记录下来，等下要用。 ​ 然后设定权限，务必四个全勾（都有用） ​ 随后回到PicGo，在图床设置里点击\"Amazon S3\"，照下图设置 部分参数： ​ 文件路径（推荐，你也可以填其他的）：/{year}/{month}/{md5}.{extName} ​ 地区：cn-east-1 ​ 自定义节点：https://s3.bitiful.net ​ 自定义域名：https://{buckets-name}.s3.bitiful.net/ ​ · 测试上传 ​ 不出意外的话现在就已经设置完了，这时候返回主页测试图片能不能上传成功 ​ ​ 验证在缤纷云里是否上传成功 ​ ​ ","date":"2023-07-30","objectID":"/posts/220ffe6/:4:1","tags":["图床","PicGo"],"title":"缤纷云+PicGo搭建图床","uri":"/posts/220ffe6/"}]